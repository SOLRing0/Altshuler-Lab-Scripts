function[Sample,AI0,AI1,AI2,AI3,AI4,AI5,AI6,AI7,AO0,AO1,Stim] = importWLdata(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [SAMPLE,AI0,AI1,AI2,AI3,AI4,AI5,AI6,AI7,AO0,AO1,STIM] =
%   IMPORTFILE(FILENAME) Reads data from text file FILENAME for the default
%   selection.
%
%   [SAMPLE,AI0,AI1,AI2,AI3,AI4,AI5,AI6,AI7,AO0,AO1,STIM] =
%   IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2014/08/21 16:16:01

%% Initialize variables.
delimiter = '\t';
if nargin<=2
    startRow = 20;
    endRow = inf;
end

%% Format string for each line of text:
% column1: double (%f)
% column2: double (%f)
% column3: double (%f)
% column4: double (%f)
% column5: double (%f)
% column6: double (%f)
% column7: double (%f)
% column8: double (%f)
% column9: double (%f)
% column10: double (%f)
% column11: double (%f)
% column12: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
textscan(fileID, '%[^\n\r]', startRow(1)-1, 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    textscan(fileID, '%[^\n\r]', startRow(block)-1, 'ReturnOnError', false);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
Sample = dataArray{:, 1};
AI0 = dataArray{:, 2};
AI1 = dataArray{:, 3};
AI2 = dataArray{:, 4};
AI3 = dataArray{:, 5};
AI4 = dataArray{:, 6};
AI5 = dataArray{:, 7};
AI6 = dataArray{:, 8};
AI7 = dataArray{:, 9};
AO0 = dataArray{:, 10};
AO1 = dataArray{:, 11};
Stim = dataArray{:, 12};

